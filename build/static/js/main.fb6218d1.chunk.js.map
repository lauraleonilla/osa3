{"version":3,"sources":["services/contactService.js","components/Search.js","components/Person.js","components/Contacts.js","components/Input.js","components/Message.js","App.js","index.js"],"names":["baseURL","contactService","axios","get","personObject","post","deleteId","delete","concat","id","newNumber","put","Search","props","react_default","a","createElement","value","onChange","Person","_ref","contacts","remove","name","number","onClick","Contacts","map","e","components_Person","key","Input","Message","message","className","Error","_ref2","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","showAll","setShowall","_useState9","_useState10","setMessage","_useState11","_useState12","isError","setIsError","useEffect","then","res","data","updateNumber","person","find","updatedPerson","objectSpread","setTimeout","catch","error","personsToShow","filter","toLowerCase","indexOf","Message_Message","Message_Error","components_Search","event","target","onSubmit","preventDefault","p","window","confirm","createdPerson","console","log","response","components_Input","type","components_Contacts","updated","toConsumableArray","i","length","splice","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fb6218d1.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURL = 'api/persons'\n\nconst getAll = () => {\n    return axios.get(baseURL)\n}\n\nconst create = (personObject) => {\n    return axios.post(baseURL, personObject)\n}\n\nconst remove = (deleteId) => {\n    return axios.delete(`${baseURL}/${deleteId}`)\n}\n\nconst update = (id, newNumber) => {\n    return axios.put(`${baseURL}/${id}`, newNumber)\n }\n\nexport default {\n    getAll, create, remove, update\n}\n\n","import React from 'react'\n\nconst Search = (props) => {\n    return (\n        <div>\n            <p>Hae henkilön nimellä:</p>\n            <input value={props.value} onChange={props.onChange} />\n        </div>\n    )\n}\n\nexport default Search","import React from 'react'\n\nconst Person = ({ contacts, remove }) => {\n  return (\n      <div>\n          <p>{contacts.name} {contacts.number} <button onClick={remove}>Poista</button> </p>\n      </div>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Contacts = ({ contacts, remove }) => {\n    return (\n        <div>\n             <h2>Numerot</h2>\n            <div>\n                {contacts.map(e => \n                <Person \n                key={e.name} \n                contacts={e} \n                remove={() => remove(e.id)}/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Contacts","import React from 'react'\n\nconst Input = ({ value, onChange }) => {\n    return (\n        <div>\n          <input value={value} onChange={onChange}/>\n        </div>\n    )\n}\n\nexport default Input","import React from 'react'\n\nconst Message = ({ message }) => {\n    if(message === null) {\n        return null\n    }\n    return (\n        <div className='message'>\n            { message }\n        </div>\n    )\n}\n\nconst Error = ({ message }) => {\n    if(message === null) {\n        return null\n    }\n    return (\n        <div className='error'>\n            { message }\n        </div>\n    )\n}\n\nexport {\n    Message, \n    Error }","import React, { useState, useEffect } from 'react'\n\nimport contactService from './services/contactService'\nimport Search from './components/Search'\nimport Contacts from './components/Contacts'\nimport Input from './components/Input'\nimport { Message, Error } from './components/Message'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowall] = useState('')\n  const [message, setMessage] = useState(null)\n  const [isError, setIsError] = useState(null)\n\n  useEffect(() => {\n    contactService.getAll().then(res => setPersons(res.data))\n  }, [])\n\n  const addName = event => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (persons.find(p => p.name === newName)) {\n      if (window.confirm(`${newName} on jo luettelossa, korvataanko numero uudella?`)) {\n        updateNumber(newName)\n      }\n    } else {\n      contactService\n        .create(personObject)\n        .then(createdPerson => {\n          setPersons(persons.concat(createdPerson.data))\n          setMessage(`Lisättiin ${newName}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setIsError(`${error.response.data.error}`)\n          setTimeout(() => {\n            setIsError(null)\n          }, 3000)\n        })\n    }\n      setPersons(persons)\n  }\n\n  const handlePersonChange = event => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = event => {\n    setShowall(event.target.value)\n  }\n\n  const removePerson = deleteId => {\n    deleteId = persons.find(e => e.id === deleteId)\n    const name = persons.find(e => e.name === deleteId.name)\n    if (window.confirm(`Poistetaanko ${name.name}`)) {\n      deleteId = deleteId.id\n      contactService.remove(deleteId)\n      let updated = [...persons]\n      for (let i = 0; i < persons.length; i++) {\n        let person = persons[i]\n        if (person.id === deleteId) {\n          updated.splice(i, 1)\n          setMessage(`Poistettiin ${person.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n          break\n        }\n      }\n      setPersons(updated)\n    }\n  }\n\n  const updateNumber = newName => {\n    let id\n    let person = persons.find(e => {\n      id = e.id\n      return e.name === newName\n    })\n    const updatedPerson = { ...person, number: newNumber }\n    contactService.update(id, updatedPerson)\n      .then(res => {\n        setPersons(\n          persons.map(person => (person.id !== id ? person : res.data))\n        )\n        setMessage(`Muutettiin ${person.name} numero`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => setIsError(`Henkilö on jo poistettu`))\n    setTimeout(() => setIsError(null), 3000)\n    setPersons(persons)\n  }\n\n  const personsToShow = persons.filter(\n    e => e.name.toLowerCase().indexOf(showAll.toLowerCase()) !== -1\n  )\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Message message={message} />\n      <Error message={isError} />\n      <Search value={showAll} onChange={handleSearchChange} />\n      <h2>Lisää uusi</h2>\n      <form onSubmit={addName}>\n        <div>\n          Nimi: <Input value={newName} onChange={handlePersonChange} />\n          <div>\n            Numero: <Input value={newNumber} onChange={handleNumberChange} />\n          </div>\n        </div>\n        <div>\n          <button type='submit'>Lisää</button>\n        </div>\n      </form>\n      <Contacts contacts={personsToShow} remove={removePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}